var eSoafApp = angular.module("eSoafApp",['ngRepeatUtils','ngCookies','multi-select','ngDialog','ui.bootstrap','ui.sortable','angular-confirm','i18nDynamic','chart.js','ngSanitize','colorpicker.module','textAngular','nvd3','ngTouch','angular.filter','mwl.calendar','ngRoute','ngCapsLock','pdf','uiGmapgoogle-maps']);
eSoafApp.config(["$httpProvider","$controllerProvider", "$provide", "$compileProvider", "uibDatepickerConfig", "uibDatepickerPopupConfig","$touchProvider","calendarConfig","uiGmapGoogleMapApiProvider",
	function($httpProvider, $controllerProvider, $provide, $compileProvider, uibDatepickerConfig, uibDatepickerPopupConfig, $touchProvider, calendarConfig, uiGmapGoogleMapApiProvider) {
	$httpProvider.defaults.useXDomain = true;
    $httpProvider.defaults.withCredentials = true;
    uiGmapGoogleMapApiProvider.configure({china: true});
    uibDatepickerConfig.startingDay=1;
    uibDatepickerConfig.showWeeks = false;
    uibDatepickerPopupConfig.showButtonBar = false;
    uibDatepickerPopupConfig.appendToBody=true;
    uibDatepickerPopupConfig.currentText="今天";
    uibDatepickerPopupConfig.closeText="取消";
    uibDatepickerPopupConfig.clearText="清除";
	eSoafApp._controller = eSoafApp.controller;
	eSoafApp._service = eSoafApp.service;
	eSoafApp._factory=eSoafApp.factory;
	eSoafApp._value=eSoafApp.value;
	eSoafApp._directive=eSoafApp.directive;
	eSoafApp.controller=function(name,constructor){$controllerProvider.register( name, constructor );return( this );};
	eSoafApp.service=function(name,constructor){$provide.service( name, constructor );return(this);};
	eSoafApp.factory=function(name,factory){$provide.factory(name,factory);return(this);};
	eSoafApp.value = function(name,value){$provide.value( name, value );return(this);};
	eSoafApp.directive = function( name, factory ) {$compileProvider.directive( name, factory );return(this);};
	$touchProvider.ngClickOverrideEnabled(true);
	calendarConfig.displayAllMonthEvents = true;
	calendarConfig.allDateFormats.angular.title.year = "yyyy年";
	calendarConfig.allDateFormats.angular.title.month = "yyyy年 MMMM";
	calendarConfig.allDateFormats.angular.title.day = "yyyy年 MMMM d日 EEEE";
	calendarConfig.allDateFormats.angular.date.day = "MMM d日";
	$provide.decorator('taOptions', ['taRegisterTool', '$delegate', function(taRegisterTool, taOptions){
	      taRegisterTool('backgroundColor', {
	        display: "<button colorpicker class='btn btn-default ng-scope' title='Background Color' type='button' colorpicker-close-on-select colorpicker-position='bottom' ng-model='backgroundColor' style='background-color: {{backgroundColor}}'><i class='fa fa-paint-brush'></i></button>",
	        action: function (deferred) {
	          var self = this;
	          this.$editor().wrapSelection('backgroundColor', this.backgroundColor);
	          if (typeof self.listener == 'undefined') {
	            self.listener = self.$watch('backgroundColor', function (newValue) {
	              self.$editor().wrapSelection('backColor', newValue);
	            });
	          }
	          self.$on('colorpicker-selected', function () {
	            deferred.resolve();
	          });
	          self.$on('colorpicker-closed', function () {
	            deferred.resolve();
	          });
	          return;
	        }
	      });
	      taOptions.toolbar[1].unshift('backgroundColor');
	      taRegisterTool('fontColor', {
	        display: "<button colorpicker type='button' class='btn btn-default ng-scope'  title='Font Color'  colorpicker-close-on-select colorpicker-position='bottom' ng-model='fontColor' style='color: {{fontColor}}'><i class='fa fa-font '></i></button>",
	        action: function (deferred) {
	          var self = this;
	          if (typeof self.listener == 'undefined') {
	            self.listener = self.$watch('fontColor', function (newValue) {
	              self.$editor().wrapSelection('foreColor', newValue);
	            });
	          }
	          self.$on('colorpicker-selected', function () {
	            deferred.resolve();
	          });
	          self.$on('colorpicker-closed', function () {
	            deferred.resolve();
	          });
	          return false;
	        }
	      });
	      taOptions.toolbar[1].unshift('fontColor');
	      taOptions.setup.textEditorSetup=function($element) {
	        $element.attr('ui-codemirror', '');
	      };
	      return taOptions;}]);}]);
eSoafApp.run(function($confirmModalDefaults){$confirmModalDefaults.templateUrl='assets/template/confirm.html';$confirmModalDefaults.defaultLabels.title='警告';$confirmModalDefaults.defaultLabels.ok='確定';$confirmModalDefaults.defaultLabels.cancel='取消';});